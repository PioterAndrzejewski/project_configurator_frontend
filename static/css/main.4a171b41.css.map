{"version":3,"file":"static/css/main.4a171b41.css","mappings":"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","sources":["style/ProjectConfiguratorMain.module.sass","style/_mixins.sass","style/_variables.sass","style/ProjectVisualisation.module.sass","style/ProjectConfiguratorAside.module.sass","style/AppointmentButton.module.sass","style/Slogan.module.sass","style/Home.module.sass","style/Contact.module.sass","style/ErrorPage.module.sass","style/ProjectConfigurator.module.sass","style/_media.scss","style/_reset.sass","style/App.module.sass"],"sourcesContent":["@import \"reset\"\r\n@import \"mixins\"\r\n@import \"variables\"\r\n@import \"fonts\"\r\n@import \"media\"\r\n\r\n.main\r\n    @include grid-child-position(2, end, first, end)\r\n    @include flex-column-layout\r\n\r\n    margin-right: 60px\r\n\r\n    .navbar\r\n        z-index: 10\r\n        color: white\r\n        flex-basis: $top-bar-height\r\n        width: $right-column-width\r\n        align-self: flex-end\r\n        .list\r\n            line-height: $top-bar-height\r\n            display: flex\r\n            align-items: center\r\n            justify-content: space-between\r\n            .item\r\n                flex-basis: 147px\r\n                text-align: center\r\n                @include typography-secondary(black)\r\n                &:first-child\r\n                    text-align: left\r\n                &:last-child\r\n                    text-align: right\r\n                .itemText\r\n                    display: inline-block\r\n                    @include animation-hover-main\r\n                    @include animation-nav-item\r\n                .itemTextLight\r\n                    display: inline-block\r\n                    @include animation-hover-main\r\n                    @include animation-nav-item-light\r\n                item\r\n            .itemLight\r\n                @include typography-secondary($color-font-dark)\r\n            .itemDark\r\n                @include typography-secondary($color-font-light)\r\n    .projectDetails\r\n        flex-grow: 1\r\n        display: flex\r\n        width: $right-column-width\r\n        align-self: flex-end\r\n\r\n        flex-direction: column\r\n        justify-content: space-around\r\n\r\n        .heading\r\n            @include typography-main-bold($color-font-dark)\r\n\r\n        .inputLeftElement\r\n            color: gray\r\n            font-size: 0.6em\r\n\r\n        .iconList\r\n            display: flex\r\n            justify-content: space-between\r\n\r\n            .iconItem\r\n                width: 125px\r\n                border: 1px solid black\r\n                border-radius: 10px\r\n                opacity: 0.6\r\n                @include animation-hover-main\r\n                .iconImage\r\n                    display: block\r\n                    min-height: 100%\r\n                    min-width: 100%\r\n            & .active\r\n                opacity: 1\r\n                box-shadow: $box-shadow-main\r\n                background-color: $color-bg-icon-active\r\n                border: none\r\n                .iconImage\r\n                    filter: invert(1) brightness(0.9)\r\n\r\n    .footer\r\n        flex-basis: $bottom-bar-height\r\n        padding-top: 55px\r\n        text-align: right\r\n        font-size: 15px\r\n        z-index: 5\r\n        .footerLink\r\n            margin: 10px\r\n    .footerLight\r\n        color: $color-font-light\r\n    .footerDark\r\n        color: $color-font-dark\r\n","@mixin grid-child-position($first-vertical, $last-vertical, $first-horizontal, $last-horizontal)\r\n    grid-column-start: $first-vertical\r\n    grid-column-end: $last-vertical\r\n    grid-row-start: $first-horizontal\r\n    grid-row-end: $last-horizontal\r\n\r\n@mixin flex-column-layout\r\n    display: flex\r\n    flex-direction: column\r\n    justify-content: space-between\r\n\r\n@mixin typography-main-bold($color)\r\n    font-family: $font-main\r\n    font-weight: 600\r\n    font-size: 30px\r\n    letter-spacing: 1px\r\n    color: $color\r\n\r\n@mixin typography-main($color)\r\n    font-family: $font-main\r\n    font-weight: 400\r\n    font-size: 24px\r\n    letter-spacing: 1px\r\n    color: $color\r\n\r\n@mixin typography-secondary($color)\r\n    font-family: $font-main\r\n    font-weight: 300\r\n    font-size: 18px\r\n    color: $color\r\n\r\n@mixin typography-paragraph($color)\r\n    font-family: $font-main\r\n    font-weight: 100\r\n    font-size: 14px\r\n    line-height: 135%\r\n    letter-spacing: 1px\r\n    color: $color\r\n\r\n@mixin animation-hover-main\r\n    transition: 0.15s\r\n    cursor: pointer\r\n    &:hover\r\n        transform: translate(0, -2px) scale(105%)\r\n        opacity: 1\r\n\r\n@mixin animation-hover-submit\r\n    transition: 0.15s\r\n    cursor: pointer\r\n    &:hover\r\n        transform: translate(0, -2px) scale(105%)\r\n\r\n@mixin animation-nav-item\r\n    &::after\r\n        content: \"\"\r\n        display: block\r\n        position: relative\r\n        top: -45px\r\n        height: 1px\r\n        background-color: $color-bg-main\r\n        transition: 0.15s\r\n        transform: scaleX(0%)\r\n    &:hover::after\r\n        transform: scaleX(100%)\r\n\r\n@mixin animation-nav-item-light\r\n    &::after\r\n        content: \"\"\r\n        display: block\r\n        position: relative\r\n        top: -45px\r\n        height: 1px\r\n        background-color: $color-bg-light\r\n        transition: 0.15s\r\n        transform: scaleX(0%)\r\n    &:hover::after\r\n        transform: scaleX(100%)\r\n\r\n@mixin module-moved($xtranslation)\r\n    transition: 0.3s\r\n    transform: translateX($xtranslation)\r\n\r\n@mixin main-grid\r\n    display: grid\r\n    grid-template-columns: [first] 520px [line2] auto [end]\r\n    grid-template-rows: [first] auto [end]\r\n\r\n@mixin contact-grid\r\n    display: grid\r\n    grid-template-columns: [first] 60px [line2] 460px [line3] 266px [line4] 520px [line5] 60px [line6]\r\n    grid-template-rows: [first] auto [end]\r\n\r\n@mixin contact-button($color)\r\n    height: 50px\r\n    line-height: 50px\r\n    display: flex\r\n    justify-content: center\r\n    border-radius: 10px\r\n    background-color: $color\r\n    box-shadow: $box-shadow-main\r\n","\r\n$color-bg-canvas: #C6C6C6\r\n$color-bg-main: #474F79\r\n$color-bg-light: #ffffff\r\n\r\n$color-bg-button: #FF7373\r\n$color-bg-button-active: #fa8686\r\n\r\n$color-bg-icon-active: #60C46C\r\n\r\n$color-font-dark: #0f0f0f\r\n$color-font-light: #E3E3E3\r\n$color-font-light-less-important: #ffffffcc\r\n\r\n$box-shadow-main: #464646 2px 2px 8px\r\n\r\n$font-main: \"Jost\", \"Arial\", \"sans serif\"\r\n\r\n$top-bar-height: 120px\r\n$bottom-bar-height: 150px\r\n$right-column-width: 520px\r\n","@import \"reset\"\r\n@import \"mixins\"\r\n@import \"variables\"\r\n@import \"fonts\"\r\n@import \"media\"\r\n\r\n.visualisation\r\n    position: absolute\r\n    top: 50%\r\n    left: 520px\r\n    max-width: 350px\r\n    min-height: 300px\r\n    transform: translate(-50%, -50%)\r\n    .visualisationImageShadow\r\n        position: absolute\r\n        z-index: -1\r\n        top: 5px\r\n        left: 5px\r\n        filter: blur(6px) brightness(0)\r\n        opacity: 0.5\r\n    .visualisationImage\r\n        color: red\r\n","@import \"reset\"\r\n@import \"mixins\"\r\n@import \"variables\"\r\n@import \"fonts\"\r\n@import \"media\"\r\n\r\n.aside\r\n    @include grid-child-position(first, 2, first, end)\r\n    @include flex-column-layout\r\n\r\n    padding-left: 60px\r\n\r\n    background-color: $color-bg-main\r\n\r\n.logoHeader\r\n    flex-basis: $top-bar-height\r\n\r\n    display: flex\r\n    align-items: center\r\n\r\n    z-index: 5\r\n    .logo\r\n        height: 30px\r\n        margin-right: 5px\r\n    .logoText\r\n        @include typography-secondary(white)\r\n\r\n.typeSelector\r\n    flex-grow: 1\r\n    display: flex\r\n    flex-direction: column\r\n\r\n    .heading\r\n        @include typography-main-bold(white)\r\n    .typesList\r\n        flex-grow: 1\r\n        margin: 30px 0\r\n\r\n        display: flex\r\n        flex-direction: column\r\n        justify-content: space-between\r\n        .typeItem\r\n            flex-basis: 15%\r\n            width: 230px\r\n\r\n            display: flex\r\n            align-items: center\r\n            opacity: 0.5\r\n\r\n            @include animation-hover-main\r\n\r\n            .buildingTypeIcon\r\n                width: 50px\r\n                height: 50px\r\n                padding: 3px\r\n                border: solid white 1px\r\n                border-radius: 10px\r\n            .buildingTypeTitle\r\n                margin-left: 20px\r\n                width: 180px\r\n                @include typography-paragraph(white)\r\n\r\n        & .typeItemActive\r\n            opacity: 1\r\n            transform: translateX(10px)\r\n            .buildingTypeIcon\r\n                box-shadow: $box-shadow-main\r\n            .buildingTypeTitle\r\n                transform-origin: left\r\n                font-weight: 400\r\n.priceBar\r\n    flex-basis: $bottom-bar-height\r\n\r\n    display: flex\r\n    justify-content: space-between\r\n\r\n    .priceHeading\r\n        @include typography-secondary($color-font-light)\r\n    .priceValue\r\n        margin-top: 5px\r\n        @include typography-main-bold($color-font-light)\r\n\r\n    .priceBarDummy\r\n        @include typography-main-bold($color-font-light)\r\n","@import \"reset\"\r\n@import \"mixins\"\r\n@import \"variables\"\r\n@import \"fonts\"\r\n@import \"media\"\r\n\r\n.appointmentButton\r\n    width: 170px\r\n    height: 70px\r\n    margin-right: 50px\r\n    border: none\r\n    border-radius: 10px\r\n\r\n    font-family: $font-main\r\n    font-weight: 300\r\n    font-size: 15px\r\n    color: white\r\n\r\n    background-color: $color-bg-button\r\n    box-shadow: $box-shadow-main\r\n\r\n    @include animation-hover-main\r\n    &:hover\r\n        background-color: $color-bg-button-active\r\n","@import \"reset\"\r\n@import \"mixins\"\r\n@import \"variables\"\r\n@import \"fonts\"\r\n@import \"media\"\r\n\r\n.container\r\n    display: flex\r\n    align-items: center\r\n    justify-content: center\r\n    height: 100%\r\n    padding: 5rem\r\n\r\n.heading\r\n    @include typography-main($color-font-light)\r\n","@import \"reset\"\r\n@import \"mixins\"\r\n@import \"variables\"\r\n@import \"fonts\"\r\n@import \"media\"\r\n\r\n.home\r\n    position: absolute\r\n    z-index: 1\r\n    top: 0\r\n    bottom: 0\r\n    left: 0\r\n    right: 0\r\n    background-color: $color-bg-main\r\n\r\n    display: flex\r\n    flex-direction: column\r\n    align-items: center\r\n    justify-content: center\r\n\r\n    transition: 0.3s\r\n    transform: translateX(0px)\r\n\r\n    .logoContainer\r\n\r\n        display: flex\r\n        align-items: center\r\n        justify-content: center\r\n        .logo\r\n            height: 30px\r\n            margin-right: 5px\r\n        .logoText\r\n            @include typography-main($color-font-light)\r\n\r\n    .slogan\r\n        margin-top: 50px\r\n        @include typography-secondary($color-font-light)\r\n\r\n.homeMoved\r\n    @include module-moved(-1500px)\r\n","@import \"reset\"\r\n@import \"mixins\"\r\n@import \"variables\"\r\n@import \"fonts\"\r\n@import \"media\"\r\n\r\n.contact\r\n    position: absolute\r\n    z-index: 1\r\n    top: 0\r\n    bottom: 0\r\n    left: 0\r\n    right: 0\r\n    background-color: $color-bg-main\r\n\r\n    @include contact-grid\r\n\r\n    transition: 0.3s\r\n    transform: translateX(0px)\r\n\r\n.contactMoved\r\n    @include module-moved(1500px)\r\n\r\n.heading\r\n    @include typography-secondary($color-font-light)\r\n\r\n.summary\r\n    display: flex\r\n    flex-direction: column\r\n    justify-content: space-between\r\n    margin-top: $top-bar-height\r\n    margin-bottom: $bottom-bar-height\r\n    color: $color-font-light\r\n    @include grid-child-position(line2, line3, first, end)\r\n    .summaryText\r\n        @include typography-main-bold($color-font-light)\r\n    .summarySection\r\n        @include typography-main($color-font-light-less-important)\r\n    .summarySectionHeading\r\n        @include typography-main($color-font-light-less-important)\r\n    .summarySectionText\r\n        margin-top: 6px\r\n        @include typography-secondary($color-font-light)\r\n    .summaryDisclaimer\r\n        margin-top: 6px\r\n        @include typography-paragraph($color-font-light)\r\n        text-align: justify\r\n\r\n.backButton\r\n    @include contact-button($color-bg-button)\r\n    @include animation-hover-main\r\n    .backText\r\n        @include typography-secondary($color-font-light)\r\n.contactForm\r\n    margin-top: $top-bar-height\r\n    margin-bottom: $bottom-bar-height\r\n    @include grid-child-position(line4, line5, first, end)\r\n    display: flex\r\n    align-items: stretch\r\n\r\n.contactHeading\r\n    @include typography-main-bold($color-font-light)\r\n\r\n.formContainer\r\n    width: 100%\r\n    display: flex\r\n    flex-direction: column\r\n    justify-content: space-between\r\n\r\n.submitButtonDisabled\r\n    @include contact-button($color-bg-icon-active)\r\n    @include typography-secondary($color-font-light)\r\n    cursor: auto\r\n    width: 100%\r\n    opacity: 0.3\r\n\r\n.submitButton\r\n    @include contact-button($color-bg-icon-active)\r\n    @include typography-secondary($color-font-light)\r\n    @include animation-hover-main\r\n    cursor: pointer\r\n    width: 100%\r\n","@import \"reset\"\r\n@import \"mixins\"\r\n@import \"variables\"\r\n@import \"fonts\"\r\n@import \"media\"\r\n\r\n.errorPage\r\n    position: absolute\r\n    z-index: 1\r\n    top: 0\r\n    bottom: 0\r\n    left: 0\r\n    right: 0\r\n    background-color: $color-bg-main\r\n\r\n    display: flex\r\n    flex-direction: column\r\n    align-items: center\r\n    justify-content: center\r\n\r\n    z-index: 4\r\n\r\n.heading\r\n    @include typography-main($color-font-light)\r\n\r\n.slogan\r\n    margin-top: 10px\r\n    @include typography-secondary($color-font-light)\r\n\r\n.sloganSmall\r\n    margin-top: 50px\r\n    @include typography-paragraph($color-font-light)\r\n","@import \"media\"\r\n@import \"reset\"\r\n@import \"mixins\"\r\n@import \"variables\"\r\n@import \"fonts\"\r\n\r\n.configurator\r\n    position: absolute\r\n    left: 50%\r\n    top: 50%\r\n    transform: translate(-50%, -50%) scale(100%)\r\n    width: 1366px\r\n    height: 900px\r\n    border-radius: 10px\r\n    font-size: 35px\r\n    font-family: $font-main\r\n\r\n    overflow: hidden\r\n    @include main-grid\r\n\r\n    background-color: $color-bg-light\r\n    box-shadow: $box-shadow-main\r\n\r\n@include media(\">=desktop-md\", \"<desktop-lg\")\r\n    .configurator\r\n        transform: translate(-50%, -50%) scale(86%)\r\n\r\n@include media(\">=desktop-sm\", \"<desktop-md\")\r\n    .configurator\r\n        transform: translate(-50%, -50%) scale(74%)\r\n\r\n@include media(\">=min\", \"<desktop-sm\")\r\n    .configurator\r\n        transform: translate(-50%, -50%) scale(100%)\r\n        width: 100%\r\n        heigt: auto\r\n        overflow: hidden\r\n","\r\n@charset \"UTF-8\";\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n@use 'sass:math';\r\n@use 'sass:map';\r\n@use 'sass:list';\r\n@use 'sass:string';\r\n@use 'sass:meta';\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n    'min': 0px,\r\n  'desktop-sm': 1024px,\r\n  'desktop-md': 1200px,\r\n  'desktop-lg': 1370px,\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n  'screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x':\r\n    '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\r\n  'retina3x':\r\n    '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)',\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  'px': 1,\r\n  'em': 0.01,\r\n  'rem': 0.1,\r\n  '': 0,\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: 'desktop' !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n  @if meta.feature-exists('at-error') {\r\n    @error $message;\r\n  } @else {\r\n    @warn $message;\r\n    $_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if im-log($message) {\r\n  }\r\n}\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {\r\n}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map.get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {\r\n    }\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n    @if not map.has-key($media-expressions, $condition) {\r\n      $operator: get-expression-operator($condition);\r\n      $prefix: get-expression-prefix($operator);\r\n      $value: get-expression-value($condition, $operator);\r\n\r\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\r\n        ($prefix == 'min' and $value > $no-media-breakpoint-value)\r\n      {\r\n        @return false;\r\n      }\r\n    } @else if not list.index($im-no-media-expressions, $condition) {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\r\n    @if string.index($expression, $operator) {\r\n      @return $operator;\r\n    }\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n  $_: im-log('No operator found in `#{$expression}`.');\r\n}\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: string.index($expression, $operator);\r\n  $parsed-dimension: string.slice($expression, 0, $operator-index - 1);\r\n  $dimension: 'width';\r\n\r\n  @if string.length($parsed-dimension) > 0 {\r\n    $dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(list.index(('<', '<=', '≤'), $operator), 'max', 'min');\r\n}\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: string.index($expression, $operator);\r\n  $value: string.slice($expression, $operator-index + string.length($operator));\r\n\r\n  @if map.has-key($breakpoints, $value) {\r\n    $value: map.get($breakpoints, $value);\r\n  } @else {\r\n    $value: to-number($value);\r\n  }\r\n\r\n  $interval: map.get($unit-intervals, math.unit($value));\r\n\r\n  @if not $interval {\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log('Unknown unit `#{math.unit($value)}`.');\r\n  }\r\n\r\n  @if $operator == '>' {\r\n    $value: $value + $interval;\r\n  } @else if $operator == '<' {\r\n    $value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map.has-key($media-expressions, $expression) {\r\n    @return map.get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: list.length($list)) {\r\n  @if list.length($list) < 1 or $start > $end {\r\n    @return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n    $result: list.append($result, list.nth($list, $i), comma);\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n\r\n@function to-number($value) {\r\n  @if meta.type-of($value) == 'number' {\r\n    @return $value;\r\n  } @else if meta.type-of($value) != 'string' {\r\n    $_: im-log('Value for `to-number` should be a number or a string.');\r\n  }\r\n\r\n  $first-character: string.slice($value, 1, 1);\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: ($first-character == '-');\r\n  $numbers: (\r\n    '0': 0,\r\n    '1': 1,\r\n    '2': 2,\r\n    '3': 3,\r\n    '4': 4,\r\n    '5': 5,\r\n    '6': 6,\r\n    '7': 7,\r\n    '8': 8,\r\n    '9': 9,\r\n  );\r\n\r\n  // Remove +/- sign if present at first character\r\n  @if ($first-character == '+' or $first-character == '-') {\r\n    $value: string.slice($value, 2);\r\n  }\r\n\r\n  @for $i from 1 through string.length($value) {\r\n    $character: string.slice($value, $i, $i);\r\n\r\n    @if not(list.index(map.keys($numbers), $character) or $character == '.') {\r\n      @return to-length(if($minus, -$result, $result), string.slice($value, $i));\r\n    }\r\n\r\n    @if $character == '.' {\r\n      $digits: 1;\r\n    } @else if $digits == 0 {\r\n      $result: $result * 10 + map.get($numbers, $character);\r\n    } @else {\r\n      $digits: $digits * 10;\r\n      $result: $result + math.div(map.get($numbers, $character), $digits);\r\n    }\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: (\r\n    'px': 1px,\r\n    'cm': 1cm,\r\n    'mm': 1mm,\r\n    '%': 1%,\r\n    'ch': 1ch,\r\n    'pc': 1pc,\r\n    'in': 1in,\r\n    'em': 1em,\r\n    'rem': 1rem,\r\n    'pt': 1pt,\r\n    'ex': 1ex,\r\n    'vw': 1vw,\r\n    'vh': 1vh,\r\n    'vmin': 1vmin,\r\n    'vmax': 1vmax,\r\n  );\r\n\r\n  @if not list.index(map.keys($units), $unit) {\r\n    $_: im-log('Invalid unit `#{$unit}`.');\r\n  }\r\n\r\n  @return $value * map.get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Kitty Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map.merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map.merge($media-expressions, $tweak-media-expressions) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  @if ($im-media-support and list.length($conditions) == 0) or\r\n    (not $im-media-support and im-intercepts-static-breakpoint($conditions...))\r\n  {\r\n    @content;\r\n  } @else if ($im-media-support and list.length($conditions) > 0) {\r\n    @media #{string.unquote(parse-expression(list.nth($conditions, 1)))} {\r\n      // Recursive call\r\n      $sliced-conditions: slice($conditions, 2);\r\n      @include media($sliced-conditions...) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}","*, *:before, *:after\r\n    box-sizing: border-box\r\n\r\nhtml, body, div, span, object, iframe, figure, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, code, em, img, small, strike, strong, sub, sup, tt, b, u, i, ol, ul, li, fieldset, form, label, table, caption, tbody, tfoot, thead, tr, th, td, main, canvas, embed, footer, header, nav, section, video\r\n    margin: 0\r\n    padding: 0\r\n    border: 0\r\n    font-size: 100%\r\n    font: inherit\r\n    vertical-align: baseline\r\n    text-rendering: optimizeLegibility\r\n    -webkit-font-smoothing: antialiased\r\n    text-size-adjust: none\r\n\r\nfooter, header, nav, section, main\r\n    display: block\r\n\r\nbody\r\n    line-height: 1\r\n\r\nol, ul\r\n    list-style: none\r\n\r\nblockquote, q\r\n    quotes: none\r\n\r\nblockquote:before, blockquote:after, q:before, q:after\r\n    content: ''\r\n    content: none\r\n\r\ntable\r\n    border-collapse: collapse\r\n    border-spacing: 0\r\n\r\ninput\r\n    -webkit-appearance: none\r\n    border-radius: 0\r\n","@import \"reset\"\r\n@import \"mixins\"\r\n@import \"variables\"\r\n@import \"fonts\"\r\n@import \"media\"\r\n\r\n.app\r\n    width: 100vw\r\n    height: 100vh\r\n\r\n    background-color: $color-bg-canvas\r\n"],"names":[],"sourceRoot":""}